events {
    worker_connections 1024;
}


    http {

        types {
            text/html              html htm shtml;
            text/javascript js;
        }

    server {
        listen 80;
        server_name localhost;  # Replace with your domain or use localhost


        root /usr/share/nginx/html;  # Updated path
        index index.html;


        location / {
        try_files $uri $uri/ =404;
        }
  


        # Public route for token generation
        location = /auth/token {
            proxy_pass http://auth_app:3000/token;
            proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Public route for registration
        location = /registration/register {
            proxy_pass http://registration_app:3000/register;
            proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }

        # Authentication validation endpoint
        location = /auth/validate {
            internal;
            proxy_pass http://auth_app:3001/validate;  # Point to your auth service
            proxy_pass_request_body off;
            proxy_set_header Content-Length "";
            proxy_set_header X-Original-URI $request_uri;
            proxy_set_header Authorization $http_authorization;  # Pass the Authorization header
        }




        # ex: fetch(`http://nginx/db/getUserPassword/${username}) 
        # can only be called from apps in this docker compose network 
      location /db/ {
            proxy_pass http://db_app:3000/;
            proxy_http_version 1.1;
            # proxy_set_header Upgrade $http_upgrade;
            # proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_cache_bypass $http_upgrade;
        }


    }
}
